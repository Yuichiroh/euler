package euler

object P45 extends App {
  /**
   * Triangular, pentagonal, and hexagonal
   * Problem 45
   * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
   *
   * Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
   * Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
   * Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
   * It can be verified that T285 = P165 = H143 = 40755.
   *
   * Find the next triangle number that is also pentagonal and hexagonal.
   */

  val hexagonals = Iterator.from(1).map(n => n * (2 * n - 1L))

  def isPentagonal(n: Long) = Math.sqrt(24 * n + 1) % 6 == 5

  def pentaAndHexa = hexagonals.filter(isPentagonal)

  def solution0 = pentaAndHexa.drop(2).next

  println(solution0)
}